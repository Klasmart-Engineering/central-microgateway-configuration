name: Sync plugin

on:
  workflow_call:
    inputs:
      github-repository-name:
        required: true
        type: string
      tag:
        required: true
        type: string
    secrets:
      github-token:
        required: true

jobs:
  read-configuration:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: KL-Engineering/central-microgateway-configuration

      - id: set-matrix
        run: |
          JSON=$(cat ./microgateways.json)
          echo "::set-output name=matrix::${JSON//'%'/'%25'}"

  sync-plugins:
    name: "Sync plugin"
    needs: read-configuration
    runs-on: ubuntu-latest
    strategy:
      matrix:
        microgateway: ${{ fromJson(needs.read-configuration.outputs.matrix) }}

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ matrix.microgateway }}
          submodules: "recursive"
          token: ${{ secrets.github-token }}

      # Update references
      - name: Update plugin
        id: update-plugin
        run: |
          if [ -d "plugins/${{ inputs.github-repository-name }}" ]; then
            git submodule update --remote plugins/${{ inputs.github-repository-name }}

            git config --global user.name 'microgateway-plugin-sync'
            git config --global user.email 'github-action@noreply.github.com'

            BRANCH_NAME=plugin-sync/${{ inputs.tag }}

            git checkout -b $BRANCH_NAME
            git add .
            git commit -m "chore(plugin-sync): auto updated plugin ${{ inputs.github-repository-name }}/${{ inputs.tag }}" && git push --set-upstream origin $BRANCH_NAME || touch no-commit
          else
            touch no-commit
          fi

          if [ -f "no-commit" ]; then
            echo "::set-output name=commit-status::no-commit"
          else 
            echo "::set-output name=pr-branch-name::$BRANCH_NAME"
          fi

      - name: Create pull request
        uses: actions/github-script@v6
        if: steps.update-plugin.outputs.commit-status != 'no-commit'
        with:
          github-token: ${{ secrets.github-token }}
          script: |
            const splitGateway = '${{ matrix.microgateway }}'.split('/');
            const owner = splitGateway[0];
            const repo = splitGateway[1];
            const head = '${{ steps.update-plugin.outputs.pr-branch-name }}';
            const splitHead = head.split('/');
            const result = await github.rest.pulls.create({
              title: '[Sync] Auto-sync of newly updated plugin',
              owner,
              repo,
              head,
              base: 'main',
              body: [
                ':bangbang: :robot: This PR is auto-generated by [actions/github-script](https://github.com/actions/github-script)',
                '',
                'Changes have been made to the up-stream [plugin](${{ github.repositoryUrl }})',
                '',
                '|         | Branch          | SHA             |',
                '| ------- | :-------------: | :-------------: |',
                '| Details | `' + `${splitHead[1]}` + '` | `' + `${splitHead[2]}` + '` |',
                '',
                'Please review and merge this in as soon as possible.'
              ].join('\n')
            });
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['automated pr', 'microgateway-sync', 'plugin-sync']
            });
