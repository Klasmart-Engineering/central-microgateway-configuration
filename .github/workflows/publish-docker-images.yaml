name: Build & push KidsLoop krakend images

on:
  push:
    paths:
      - "docker-versions.sh"

permissions:
  id-token: write
  contents: read

jobs:
  read-versions:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') }}
    outputs:
      golang-version: ${{ steps.versions.outputs.golang-version }}
      krakend-version: ${{ steps.versions.outputs.krakend-version }}
      kl-builder-version: ${{ steps.versions.outputs.kl-builder-version }}
      kl-krakend-version: ${{ steps.versions.outputs.kl-krakend-version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Read versions
        id: versions
        run: |
          source ./docker-versions.sh
          echo "::set-output name=golang-version::${GOLANG_VERSION}"
          echo "::set-output name=krakend-version::${KRAKEND_VERSION}"
          echo "::set-output name=kl-builder-version::${KL_BUILDER_VERSION}"
          echo "::set-output name=kl-krakend-version::${KL_KRAKEND_VERSION}"

  builder-image:
    runs-on: ubuntu-latest
    needs: read-versions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: kl-krakend-images-ecr
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag and push kl-krakend-builder image to Amazon ECR
        run: |
          export GOLANG_VER="${{ needs.read-versions.outputs.golang-version }}"
          export IMAGE_TAG="kl-krakend-builder"
          export IMAGE_VERSION="v${{ needs.read-versions.outputs.kl-builder-version }}"

          docker build -t $ECR_REPOSITORY --build-arg IMAGE_VERSION=$GOLANG_VER -f Dockerfile.builder .

          docker tag $ECR_REPOSITORY $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-$IMAGE_VERSION

          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-$IMAGE_VERSION
        env:
          ECR_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}

  krakend-image:
    runs-on: ubuntu-latest
    needs: read-versions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: kl-krakend-images-ecr
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag and push kl-krakend image to Amazon ECR
        run: |
          export KRAKEND_VER="${{ needs.read-versions.outputs.krakend-version }}"
          export IMAGE_TAG="kl-krakend"
          export IMAGE_VERSION="v${{ needs.read-versions.outputs.kl-krakend-version }}"

          docker build -t $ECR_REPOSITORY --build-arg IMAGE_VERSION=$KRAKEND_VER -f Dockerfile.krakend .

          docker tag $ECR_REPOSITORY $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-$IMAGE_VERSION

          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-$IMAGE_VERSION
        env:
          ECR_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
