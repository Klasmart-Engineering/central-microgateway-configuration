name: Validate Microgateway Configuration

on:
  workflow_call:
    inputs:
      aws-role-session-name:
        type: string
        required: true
      aws-region:
        type: string
        required: true
    secrets:
      github-token:
        required: true
      aws-role-to-assume:
        required: true

permissions:
  id-token: write
  contents: read # This is required for actions/checkout

jobs:
  read-configuration:
    runs-on: ubuntu-latest
    outputs:
      regions-matrix: ${{ steps.set-matrix.outputs.regions-matrix }}
      environments-matrix: ${{ steps.set-matrix.outputs.environments-matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: "KL-Engineering/central-microgateway-configuration"
          token: ${{ secrets.github-token }}

      - id: set-matrix
        name: Read supported regions and environments
        run: |
          REGIONS_JSON=$(cat ./regions.json)
          REGIONS_JSON="${REGIONS_JSON//'%'/'%25'}"
          REGIONS_JSON="${REGIONS_JSON//$'\n'/'%0A'}"
          REGIONS_JSON="${REGIONS_JSON//$'\r'/'%0D'}"
          echo "::set-output name=regions-matrix::${REGIONS_JSON}"

          ENVIRONMENTS_JSON=$(cat ./environments.json)
          ENVIRONMENTS_JSON="${ENVIRONMENTS_JSON//'%'/'%25'}"
          ENVIRONMENTS_JSON="${ENVIRONMENTS_JSON//$'\n'/'%0A'}"
          ENVIRONMENTS_JSON="${ENVIRONMENTS_JSON//$'\r'/'%0D'}"
          echo "::set-output name=environments-matrix::${ENVIRONMENTS_JSON}"

  test-configuration:
    runs-on: ubuntu-latest
    needs: read-configuration
    strategy:
      matrix:
        regions: ${{ fromJson(needs.read-configuration.outputs.regions-matrix) }}
        environment: ${{ fromJson(needs.read-configuration.outputs.environments-matrix) }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.aws-role-to-assume }}
          role-session-name: ${{ inputs.aws-role-session-name }}
          aws-region: ${{ inputs.aws-region }}
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build docker image
        run: docker build -t validate -f Dockerfile.validate .
      - name: Run validation
        env:
          REGION: ${{ matrix.regions }}
          ENVIRONMENT: ${{ matrix.environment }}
        run: docker run -e REGION=$REGION -e ENVIRONMENT=$ENVIRONMENT validate
